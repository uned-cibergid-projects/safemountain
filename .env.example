# Archivo de ejemplo (.env.example) con todas las variables de entorno necesarias
# para ejecutar correctamente la aplicaci√≥n Node.js. Este archivo sirve como plantilla
# para crear configuraciones espec√≠ficas para los entornos de desarrollo, pruebas (test), staging y producci√≥n.

# ‚ö†Ô∏è IMPORTANTE: No compartas este archivo con datos reales. 
# En producci√≥n, almacena las credenciales y claves en un gestor de secretos seguro (Ejemplos: AWS Secrets Manager, Vault).
# Para usar este archivo, copia su contenido en un archivo .env y ajusta los valores seg√∫n tu entorno.

# ==============================================
# ‚öôÔ∏è Variables Generales del Entorno
# ==============================================

# Define el entorno de ejecuci√≥n de la aplicaci√≥n.
# Valores posibles: development | test | staging | production
NODE_ENV=development

# Direcci√≥n IP/Host donde la aplicaci√≥n escuchar√° las solicitudes.
# Valores recomendados: 0.0.0.0 (todas interfaces) | 127.0.0.1 (solo localhost)
# ‚ö†Ô∏è En producci√≥n, usar 0.0.0.0 para acceso externo si se despliega en contenedores.
HOST=0.0.0.0

# Puerto en el que la aplicaci√≥n escuchar√° solicitudes HTTP.
# Valores recomendados: 3000 (desarrollo), 4000 (pruebas), 8080 (staging), 443 (producci√≥n)
# ‚ö†Ô∏è En producci√≥n, establecer en 80 si se usa HTTP o 443 si se usa HTTPS.
PORT=3000

# Prefijo para las rutas de la API. Permite versionar la API o agrupar endpoints bajo un prefijo com√∫n.
# ‚ö†Ô∏è Se recomienda mantener consistencia en el dise√±o de la API.
API_PREFIX=/api/v1

# Habilita o deshabilita el soporte CORS (Permite solicitudes desde otros dominios).
# Valores posibles: true | false
# ‚ö†Ô∏è Si frontend y backend est√°n en el mismo dominio se debe deshabilitar en producci√≥n. Ajustar seg√∫n necesidad.
ENABLE_CORS=true

# Habilita o deshabilita el middleware Helmet para seguridad de cabeceras HTTP.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar en todos los entornos para mayor protecci√≥n.
ENABLE_HELMET=true

# Habilita o deshabilita el logging de solicitudes HTTP con Morgan.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar en desarrollo y staging para monitoreo.
ENABLE_MORGAN=true

# Habilita o deshabilita la compresi√≥n HTTP para respuestas del servidor.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar en producci√≥n para optimizar el rendimiento.
ENABLE_COMPRESSION=true

# Nivel de compresi√≥n HTTP para respuestas del servidor.
# Valores posibles:
# 0  ‚Üí Sin compresi√≥n, pero menor uso de CPU.
# 1  ‚Üí Compresi√≥n m√≠nima, r√°pido pero poco eficiente.
# 3  ‚Üí Compresi√≥n moderada, buen balance.
# 6  ‚Üí Compresi√≥n media. Recomendado en producci√≥n. Buen equilibrio rendimiento/CPU.
# 9  ‚Üí M√°xima compresi√≥n, pero mayor consumo de CPU.
# ‚ö†Ô∏è Se recomienda usar un nivel intermedio en producci√≥n para balancear rendimiento y uso de CPU.
COMPRESSION_LEVEL=6

# Tiempo m√°ximo de inactividad antes de cerrar conexiones (en milisegundos).
# Valores recomendados: 30000 (30 segundos) | 0 (deshabilitado)
# ‚ö†Ô∏è En producci√≥n, establecer un valor razonable para liberar recursos.
SERVER_TIMEOUT=30000

# ==============================================
# üóÉÔ∏è Configuraci√≥n de MongoDB
# ==============================================

# Direcci√≥n del servidor MongoDB.
DB_HOST=localhost

# Puerto de conexi√≥n al servidor MongoDB (por defecto: 27017).
DB_PORT=27017

# Nombre de la base de datos a utilizar.
DB_NAME=mi_basedatos

# Cadena de conexi√≥n completa a MongoDB (opcional).
# ‚ö†Ô∏è Si se especifica, tiene prioridad sobre DB_HOST, DB_PORT, etc.
DB_CONNECTION_STRING=mongodb://user:password@host:port/dbname?options

# Credenciales para autenticarse en la base de datos (dejar en blanco si no hay autenticaci√≥n).
# ‚ö†Ô∏è En producci√≥n, nunca dejar en blanco. Utilizar un gestor de secretos.
DB_USER=
DB_PASSWORD=

# Tiempo m√°ximo en milisegundos para intentar la conexi√≥n a MongoDB.
# ‚ö†Ô∏è Ajustar seg√∫n la latencia de la red y la criticidad de la conexi√≥n.
DB_CONNECTION_TIMEOUT=5000

# N√∫mero m√°ximo de conexiones simult√°neas en el pool.
# ‚ö†Ô∏è Ajustar seg√∫n la carga esperada. En aplicaciones peque√±as, un valor de 10-20 es suficiente.
DB_MAX_POOL_SIZE=10

# Habilita o deshabilita la conexi√≥n SSL/TLS a MongoDB.
# Valores posibles: true | false
# ‚ö†Ô∏è En producci√≥n, se recomienda habilitar para cifrar la comunicaci√≥n.
DB_SSL=false

# ==============================================
# üîë Configuraci√≥n de JSON Web Tokens (JWT)
# ==============================================

# Algoritmo de firma para JWT.
# Valores posibles: HS256 | HS384 | HS512 | RS256 | RS384 | RS512
# ‚ö†Ô∏è HS256 es el valor por defecto en la mayor√≠a de las librer√≠as JWT. Para algoritmos asim√©tricos (como RS256), se requieren claves p√∫blicas y privadas adicionales.
JWT_ALGORITHM=HS256

# Clave secreta para firmar los JWT (JSON Web Tokens).
# ‚ö†Ô∏è Debe ser segura, √∫nica y larga (m√≠nimo 64 caracteres). En producci√≥n, utilizar un gestor de secretos seguro.
JWT_SECRET_KEY=d0d1b6febe6109830175d704ecf470a7eeca2676b7c7ffd513d97f7668d703902fe2b495c93b46e00ae0ccd73fb4835eccb0f07ae7f7f3a49b13b83361bcc4fb11f0c82dc178f05be1273395c8cefd03eee3b98b8c91788e248d4ae9748f08eb3deff5913147ba3f62e51943b7e345afe194271f0e04c051bc08b637f3ecb031449fb7dbce14671592f5de8ea4409b88d84338a7f7faa8320f71e39cfcf8171ddd506a83ad324875e06e4ad2193263a997355a90876b1a2f5ade2335092cd4cf5e485e2aeaf0870e060014e6a365c381427b7800547d10659c4b41bc8b36446636bb017b7e4b562ceb1bc2d7a531397495a0436b77fd4eb24fbaa536278c32f3

# Clave secreta de refresco, para que el usuario no necesite introducir de nuevo sus credenciales.
REFRESH_JWT_SECRET_KEY=14d3e1b49928bc001a2b8548e7bad26942f86788b4af3aded5fe61db7a73d9dde4a527872c69dbd23118f08ac83427ef042b0df41a002b48c0deebeb74322d4f8eef958ccb5e4bf0155eeefaa28b12b4d67b4ffa383a09a72392fcb9e9bfab3ec334ef2aab54bceb477b5aced7dafe2472cf6a2360f2630b0e684b1742d478a2c936bb79823f5ae45ade4757775add09abb085c3576995061566f42151fe41e8392b9ddcff3b7ffb38735eeddb67b7ca0289bba19f08114715e73d483af4e56beffc1d2bccc194901886bc04c69c419aa88e08275c275bb5eaf23416b8d983ed069c397d30a2da530a5574b85a741f8c694301c88f42bfa9f76dc16d0b6eb4a2

# Tiempo de expiraci√≥n de los JWT.
JWT_EXPIRATION=1h

# ==============================================
# üìå Configuraci√≥n de Sesiones
# ==============================================

# Clave secreta usada para proteger las sesiones de Express.
# ‚ö†Ô∏è Debe ser segura, √∫nica y larga (m√≠nimo 64 caracteres).
SESSION_SECRET_KEY=

# Duraci√≥n m√°xima de las sesiones antes de expirar.
SESSION_EXPIRATION=24h

# Nombre de la cookie de sesi√≥n.
# ‚ö†Ô∏è Debe ser √∫nico para evitar conflictos con otras cookies. Por defecto, express-session usa "connect.sid".
SESSION_COOKIE_NAME=connect.sid

# Enviar la cookie de sesi√≥n solo sobre HTTPS.
# Valores posibles: true | false
# ‚ö†Ô∏è En producci√≥n, se recomienda habilitar si se usa HTTPS.
SESSION_COOKIE_SECURE=false

# Marcar la cookie de sesi√≥n como HttpOnly.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar para prevenir acceso desde JavaScript y proteger contra ataques XSS.
SESSION_COOKIE_HTTPONLY=true

# Modo de almacenamiento de sesiones en el servidor.
# Valores posibles: memory | mongodb
# ‚ö†Ô∏è En producci√≥n, se recomienda usar mongodb para persistencia de sesiones.
SESSION_STORE=mongodb

# Nombre de la base de datos en caso de usar MongoDB como almacenamiento de sesiones.
SESSION_STORE_DB_NAME=

# Permite que las cookies de sesi√≥n sean accesibles solo desde el mismo sitio.
# Valores posibles: strict | lax | none
# ‚ö†Ô∏è "strict" es la opci√≥n m√°s segura, "lax" permite ciertas excepciones, "none" es menos seguro.
SESSION_SAME_SITE=strict

# Forzar el guardado de la sesi√≥n en cada solicitud, incluso si no ha cambiado.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda false para optimizar el rendimiento, salvo que el almac√©n lo requiera.
SESSION_RESAVE=false

# Guardar sesiones nuevas que a√∫n no han sido modificadas.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda false para evitar almacenar sesiones vac√≠as y optimizar recursos.
SESSION_SAVE_UNINITIALIZED=false

# ==============================================
# üìß Configuraci√≥n de Correo Electr√≥nico (SMTP)
# ==============================================

# Servidor SMTP para el env√≠o de correos electr√≥nicos.
SMTP_MAIL_HOST=smtp.mailtrap.io

# Puerto SMTP est√°ndar.
# Valores posibles: 587 (TLS) | 465 (SSL) | 25 (sin cifrado)
SMTP_MAIL_PORT=587

# Credenciales para autenticarse ante el servidor SMTP.
# ‚ö†Ô∏è No exponer credenciales en c√≥digo fuente.
SMTP_MAIL_USER=66e640f3a50d84
SMTP_MAIL_PASSWORD=c263e3fca25962

# Usar conexi√≥n segura (SSL/TLS) para el env√≠o de correos.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda true en producci√≥n para cifrar la comunicaci√≥n.
SMTP_MAIL_SECURE=true

# Direcci√≥n de correo electr√≥nico del remitente.
SMTP_MAIL_FROM=contacto@dominio.com

# ==============================================
# üìà Configuraci√≥n de L√≠mites de Solicitud (Rate Limit)
# ==============================================

# Intervalo en milisegundos para limitar el n√∫mero de peticiones (60000 = 1 minuto).
# Valores recomendados: 60000 (1 minuto en desarrollo) | 30000 (30 segundos en producci√≥n)
RATE_LIMIT_WINDOW_MS=60000

# N√∫mero m√°ximo de peticiones permitidas dentro del intervalo definido anteriormente.
# ‚ö†Ô∏è En producci√≥n, ajusta este valor dependiendo de la carga esperada.
# Valores recomendados: 100 (desarrollo) | 500 (producci√≥n)
RATE_LIMIT_MAX=100

# N√∫mero de peticiones despu√©s del cual se empieza a aplicar un retraso.
# ‚ö†Ô∏è Dejar en blanco o 0 para deshabilitar el retraso. Se recomienda un valor intermedio en producci√≥n.
RATE_LIMIT_DELAY_AFTER=50

# Tiempo de retraso en milisegundos para peticiones despu√©s de RATE_LIMIT_DELAY_AFTER.
# ‚ö†Ô∏è Dejar en blanco o 0 para deshabilitar el retraso. Se sugiere 500ms para equilibrar rendimiento y experiencia.
RATE_LIMIT_DELAY_MS=500

# Habilita el registro de solicitudes bloqueadas por el Rate Limit.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda activarlo en entornos de producci√≥n para monitorear abusos.
RATE_LIMIT_LOG_BLOCKED=true

# ==============================================
# üìù Configuraci√≥n del Sistema de Logging (Winston)
# ==============================================

# Nivel m√≠nimo de logs a registrar.
# Valores posibles: error | warn | info | verbose | debug | silly
# Valores recomendados: info (desarrollo) | warn (staging) | error (producci√≥n)
LOG_LEVEL=info

# Ruta del directorio donde se almacenar√°n los archivos de log.
LOG_PATH=./logs

# Formato de los logs.
# Valores posibles: json | text
# ‚ö†Ô∏è JSON es √∫til para an√°lisis automatizado, text para lectura humana. Se recomienda JSON en producci√≥n.
LOG_FORMAT=json

# Tama√±o m√°ximo de un archivo de log en bytes.
# ‚ö†Ô∏è Se recomienda un valor razonable (ejemplo: 10485760 = 10MB) para evitar archivos demasiado grandes.
LOG_MAX_SIZE=10485760

# N√∫mero m√°ximo de archivos de log a mantener.
# ‚ö†Ô∏è Ajustar seg√∫n las necesidades de retenci√≥n. Se sugiere 5 para un historial moderado.
LOG_MAX_FILES=5

# Tiempo en d√≠as antes de que los logs sean eliminados autom√°ticamente.
# Valores recomendados: 7 (desarrollo) | 30 (producci√≥n)
LOG_RETENTION_DAYS=30

# Habilitar logging a la consola.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar en desarrollo y deshabilitar en producci√≥n para mejorar el rendimiento.
LOG_CONSOLE=true

# ==============================================
# üìú Logging HTTP (Morgan)
# ==============================================

# Formato del log HTTP.
# Valores posibles: combined | dev | short | tiny
# Valores recomendados: dev (desarrollo) | combined (producci√≥n)
MORGAN_LOG_FORMAT=combined

# Destino de los logs de Morgan.
# Valores posibles: console | file
# ‚ö†Ô∏è En producci√≥n, se recomienda file para persistencia y an√°lisis posterior.
MORGAN_LOG_OUTPUT=console

# Ruta del archivo de logs de Morgan.
# ‚ö†Ô∏è Ajustar seg√∫n la estructura del proyecto. Se sugiere './logs/morgan.log'.
MORGAN_LOG_FILE_PATH=./logs/morgan.log

# Omitir logging para solicitudes con c√≥digo de estado menor a 400.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda false para registrar todas las solicitudes. true para reducir el volumen de logs.
MORGAN_SKIP=false

# ==============================================
# üõÇ Configuraci√≥n de Passport.js
# ==============================================

# Estrategia por defecto para autenticaci√≥n.
# Valores posibles: local | jwt | oauth2
PASSPORT_DEFAULT_STRATEGY=jwt

# Clave secreta para JWT en Passport.js.
# ‚ö†Ô∏è Debe ser segura, √∫nica y larga (m√≠nimo 64 caracteres). En producci√≥n, utilizar un gestor de secretos.
PASSPORT_JWT_SECRET=

# ==============================================
# üìÇ Configuraci√≥n de Subida de Archivos (Multer)
# ==============================================

# Ruta del directorio para almacenar los archivos subidos.
FILE_UPLOAD_PATH=./uploads

# Tama√±o m√°ximo de archivo permitido.
# Valores recomendados: 5242880 (5MB para im√°genes) | 10485760 (10MB para documentos) | 52428800 (50MB para videos)
FILE_UPLOAD_MAX_SIZE=5242880

# Tipos de archivo permitidos.
# Valores posibles: image/jpeg | image/png | application/pdf | application/zip | application/msword
FILE_UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,application/pdf

# Estrategia para generar nombres de archivos.
# Valores posibles: original | unique
# ‚ö†Ô∏è Unique previene colisiones de nombres y mejora la seguridad.
FILE_UPLOAD_FILENAME_STRATEGY=unique

# Directorio temporal para archivos subidos.
FILE_UPLOAD_TEMP_PATH=./temp

# ==============================================
# üìö Configuraci√≥n de Documentaci√≥n (Swagger UI)
# ==============================================

# Ruta donde Swagger UI estar√° disponible.
SWAGGER_UI_ROUTE=/api-docs

# Habilita/deshabilita swagger-ui-express.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar solo en desarrollo y staging.
ENABLE_SWAGGER=true

# Tema visual para Swagger UI.
# Valores posibles: default | feeling-blue | flate-top | material | monokai | muted | newspaper | outline
# ‚ö†Ô∏è Personalizar seg√∫n preferencias. 'default' es el est√°ndar.
SWAGGER_UI_THEME=default

# ==============================================
# üõÇ Configuraci√≥n de Roles y Permisos
# ==============================================

# Rol por defecto asignado a los nuevos usuarios.
# Valores posibles: user | support | manager
DEFAULT_ROLE=user

# Rol de administrador con acceso total
# Valores posibles: admin | superadmin
SUPER_ADMIN_ROLE=superadmin

# ==============================================
# üß™ Configuraci√≥n del Entorno de Pruebas (test)
# ==============================================

# Puerto espec√≠fico para ejecutar pruebas, diferente del puerto est√°ndar.
TEST_PORT=4000

# Configuraci√≥n espec√≠fica para base de datos en el entorno de pruebas.
TEST_DB_HOST=localhost
TEST_DB_PORT=27017
TEST_DB_NAME=test_basedatos
TEST_DB_USER=
TEST_DB_PASSWORD=

# Cadena de conexi√≥n completa para la base de datos de pruebas.
# ‚ö†Ô∏è Si se especifica, tiene prioridad sobre TEST_DB_HOST, TEST_DB_PORT, etc.
# Ejemplo: mongodb://localhost:27017/test_basedatos
TEST_DB_CONNECTION_STRING=

# Clave secreta espec√≠fica para JWT en entorno de pruebas, distinta de otros entornos.
# ‚ö†Ô∏è Debe ser segura y √∫nica para evitar conflictos con otros entornos.
TEST_JWT_SECRET_KEY=

# Clave secreta espec√≠fica para sesiones durante las pruebas.
# ‚ö†Ô∏è Debe ser segura y √∫nica para evitar conflictos con otros entornos.
TEST_SESSION_SECRET_KEY=

# Servidor SMTP dedicado o mock para pruebas de env√≠o de correos electr√≥nicos.
TEST_SMTP_MAIL_HOST=
TEST_SMTP_MAIL_PORT=
TEST_SMTP_MAIL_USER=
TEST_SMTP_MAIL_PASSWORD=
TEST_SMTP_MAIL_FROM=

# Habilitar mocks para servicios externos en pruebas.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar para aislar pruebas y evitar interacciones con servicios reales.
TEST_ENABLE_MOCKS=true

# Habilitar modo de depuraci√≥n en el entorno de pruebas.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar para obtener m√°s detalles en los logs durante las pruebas.
TEST_DEBUG_MODE=true

# Configuraci√≥n espec√≠fica del logging durante pruebas.
# Valores posibles: error | warn | info | debug
# Valores recomendados: warn
TEST_LOG_LEVEL=warn
TEST_LOG_DIR=./test-logs

# Nivel de consistencia para las operaciones de lectura en la base de datos de pruebas.
# Valores posibles: primary | primaryPreferred | secondary | secondaryPreferred | nearest
# ‚ö†Ô∏è En entornos de pruebas, "primary" garantiza coherencia en los resultados.
TEST_DB_READ_PREFERENCE=primary

# Modo de escritura en la base de datos de pruebas.
# Valores posibles: 1 (confirmaci√≥n en nodo primario) | majority (confirmaci√≥n en la mayor√≠a de los nodos)
# ‚ö†Ô∏è En pruebas, se recomienda "majority" para simular un entorno de producci√≥n con alta disponibilidad.
TEST_DB_WRITE_CONCERN=majority

# Habilita/deshabilita la limpieza autom√°tica de la base de datos despu√©s de cada ejecuci√≥n de pruebas.
# Valores posibles: true | false
# ‚ö†Ô∏è Se recomienda habilitar en pruebas de integraci√≥n para garantizar que cada test comience con una base limpia.
TEST_DB_CLEANUP=true 

# ==============================================
# üîê Configuraci√≥n de Servicios Externos (APIs)
# ==============================================

# Clave secreta para la validaci√≥n del CAPTCHA.
# ‚ö†Ô∏è Esta clave es de prueba y siempre devuelve √©xito. √ösala solo en entornos de desarrollo o test.
# Para producci√≥n, obtener claves reales desde: https://www.google.com/recaptcha/admin
CAPTCHA_SECRET_KEY=6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe
